/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public static boolean isPalindrome(ListNode head) {
        if (null == head || head.next == null) {
            return true;
        }

		int size = 0;
        ListNode cur = head;
        while (cur != null) {
            size++;
            cur = cur.next;
        }
        int mid = size / 2;
        if (size % 2 != 0) {
            mid = mid + 1;
        }

        cur = head;
        int i = 0;
        ListNode haltAft;
        while (i < mid) {
            cur = cur.next;
            i++;
        }

        haltAft = cur;
        ListNode pre = null;
        while (haltAft != null) {
            ListNode next = haltAft.next;
            haltAft.next = pre;
            pre = haltAft;
            haltAft = next;
        }

        cur = head;
        while (pre != null) {
            if (pre.val != cur.val) {
                return false;
            }
            pre = pre.next;
            cur = cur.next;
        }
        return true;
    }
}
